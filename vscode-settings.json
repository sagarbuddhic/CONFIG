{
    "window.zoomLevel": 1,
    "files.autoSave": "off",
    "workbench.sideBar.location": "right",
    "workbench.activityBar.visible": true,
    "editor.minimap.enabled": false,
    "editor.fontFamily": "Fira Code",
    "editor.fontLigatures": true,
    "editor.cursorStyle": "block",
    "editor.cursorBlinking": "phase",
    "editor.linkedEditing": true,
    "workbench.editor.highlightModifiedTabs": true,
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": true,
        "suppressNoRepositoryWarning": false,
        "suppressResultsExplorerNotice": false,
        "suppressUpdateNotice": false,
        "suppressWelcomeNotice": true
    },
    "javascript.updateImportsOnFileMove.enabled": "always",
    // "terminal.integrated.rendererType": "dom",
    // "terminal.external.osxExec": "iTerm.app",
    // "terminal.integrated.shell.osx": "/bin/bash",
    // "terminal.explorerKind": "external",
    // "terminal.integrated.fontFamily": "menlo",
    // "terminal.integrated.shell.linux": "/bin/bash",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.cursorBlinking": true,
    "workbench.colorCustomizations": {
        "terminal.background": "#020202",
        "terminal.foreground": "#32CD32",
        "editor.background": "#131212",
        "sideBar.background": "#131313",
        // "editorWhitespace.foreground": "#93A1A130",
    },
    "editor.tokenColorCustomizations": {
        "numbers": "#f1d4d4",
        "comments": "#6B8E23",
        "functions": "#6decb9",
        "strings": "#ea5e5e",
        "variables": "#3fc5f0",
        "keywords": "#bc5090",
        "types": "#f1d6ab",
        "textMateRules": [
            {
                "scope": [
                    // all comment types
                    "comment",
                    // true, false, null
                    "constant.language",
                    // import, from, export, default, return, if, for, break, continue, try, catch, finally,
                    // throw, default, yield, await
                    "keyword.control",
                    // in, void, delete, instanceof
                    "keyword.operator.expression",
                    // debugger
                    "keyword.other",
                    // new
                    "keyword.operator.new",
                    // super, this, arguments
                    "variable.language",
                    // attributes in html, jsx, etc.
                    "entity.other.attribute-name",
                    // static, extends, async, private, public, implements
                    // constructor, const, let, var, enum, class, function, interface
                    // no explicit scopes for constructor, const, let, var
                    // also no explicit scope for function without the arrow
                    // therefore we enable all storage and explictly exclude the arrow in another scope
                    "storage",
                ],
                "settings": {
                    "fontStyle": "italic"
                }
            },
            {
                "scope": [
                    "entity",
                    "entity.name",
                    "entity.name.class",
                    "entity.name.function",
                    "entity.name.method",
                    "entity.name.section",
                    "entity.name.selector",
                    "entity.name.tag",
                    "entity.name.type",
                    "entity.other",
                    "entity.other.attribute-name",
                    "entity.other.inherited-class",
                ],
                "settings": {
                    "fontStyle": ""
                }
            }
        ]
    },
    "editor.multiCursorModifier": "alt",
    "python.formatting.provider": "autopep8",
    "[javascript]": {
        "editor.formatOnSave": true,
        "editor.fontLigatures": "'ss02', 'ss19'",
        "editor.defaultFormatter": "esbenp.prettier-vscode",
    },
    "[typescript]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
    },
    "[python]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    },
    "[json]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
    },
    "breadcrumbs.enabled": false,
    "emmet.includeLanguages": {
        "javascript": "javascriptreact"
    },
    "emmet.showSuggestionsAsSnippets": true,
    "editor.snippetSuggestions": "top",
    "editor.fontSize": 15,
    "editor.largeFileOptimizations": false,
    "diffEditor.ignoreTrimWhitespace": false,
}
